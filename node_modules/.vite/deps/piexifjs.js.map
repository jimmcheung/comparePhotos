{
  "version": 3,
  "sources": ["../../piexifjs/piexif.js"],
  "sourcesContent": ["/* piexifjs\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014, 2015 hMatoba(https://github.com/hMatoba)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n(function () {\r\n    \"use strict\";\r\n    var that = {};\r\n    that.version = \"1.0.4\";\r\n\r\n    that.remove = function (jpeg) {\r\n        var b64 = false;\r\n        if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {\r\n        } else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n            jpeg = atob(jpeg.split(\",\")[1]);\r\n            b64 = true;\r\n        } else {\r\n            throw new Error(\"Given data is not jpeg.\");\r\n        }\r\n        \r\n        var segments = splitIntoSegments(jpeg);\r\n        var newSegments = segments.filter(function(seg){\r\n          return  !(seg.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                   seg.slice(4, 10) == \"Exif\\x00\\x00\"); \r\n        });\r\n        \r\n        var new_data = newSegments.join(\"\");\r\n        if (b64) {\r\n            new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\r\n        }\r\n\r\n        return new_data;\r\n    };\r\n\r\n\r\n    that.insert = function (exif, jpeg) {\r\n        var b64 = false;\r\n        if (exif.slice(0, 6) != \"\\x45\\x78\\x69\\x66\\x00\\x00\") {\r\n            throw new Error(\"Given data is not exif.\");\r\n        }\r\n        if (jpeg.slice(0, 2) == \"\\xff\\xd8\") {\r\n        } else if (jpeg.slice(0, 23) == \"data:image/jpeg;base64,\" || jpeg.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n            jpeg = atob(jpeg.split(\",\")[1]);\r\n            b64 = true;\r\n        } else {\r\n            throw new Error(\"Given data is not jpeg.\");\r\n        }\r\n\r\n        var exifStr = \"\\xff\\xe1\" + pack(\">H\", [exif.length + 2]) + exif;\r\n        var segments = splitIntoSegments(jpeg);\r\n        var new_data = mergeSegments(segments, exifStr);\r\n        if (b64) {\r\n            new_data = \"data:image/jpeg;base64,\" + btoa(new_data);\r\n        }\r\n\r\n        return new_data;\r\n    };\r\n\r\n\r\n    that.load = function (data) {\r\n        var input_data;\r\n        if (typeof (data) == \"string\") {\r\n            if (data.slice(0, 2) == \"\\xff\\xd8\") {\r\n                input_data = data;\r\n            } else if (data.slice(0, 23) == \"data:image/jpeg;base64,\" || data.slice(0, 22) == \"data:image/jpg;base64,\") {\r\n                input_data = atob(data.split(\",\")[1]);\r\n            } else if (data.slice(0, 4) == \"Exif\") {\r\n                input_data = data.slice(6);\r\n            } else {\r\n                throw new Error(\"'load' gots invalid file data.\");\r\n            }\r\n        } else {\r\n            throw new Error(\"'load' gots invalid type argument.\");\r\n        }\r\n\r\n        var exifDict = {};\r\n        var exif_dict = {\r\n            \"0th\": {},\r\n            \"Exif\": {},\r\n            \"GPS\": {},\r\n            \"Interop\": {},\r\n            \"1st\": {},\r\n            \"thumbnail\": null\r\n        };\r\n        var exifReader = new ExifReader(input_data);\r\n        if (exifReader.tiftag === null) {\r\n            return exif_dict;\r\n        }\r\n\r\n        if (exifReader.tiftag.slice(0, 2) == \"\\x49\\x49\") {\r\n            exifReader.endian_mark = \"<\";\r\n        } else {\r\n            exifReader.endian_mark = \">\";\r\n        }\r\n\r\n        var pointer = unpack(exifReader.endian_mark + \"L\",\r\n            exifReader.tiftag.slice(4, 8))[0];\r\n        exif_dict[\"0th\"] = exifReader.get_ifd(pointer, \"0th\");\r\n\r\n        var first_ifd_pointer = exif_dict[\"0th\"][\"first_ifd_pointer\"];\r\n        delete exif_dict[\"0th\"][\"first_ifd_pointer\"];\r\n\r\n        if (34665 in exif_dict[\"0th\"]) {\r\n            pointer = exif_dict[\"0th\"][34665];\r\n            exif_dict[\"Exif\"] = exifReader.get_ifd(pointer, \"Exif\");\r\n        }\r\n        if (34853 in exif_dict[\"0th\"]) {\r\n            pointer = exif_dict[\"0th\"][34853];\r\n            exif_dict[\"GPS\"] = exifReader.get_ifd(pointer, \"GPS\");\r\n        }\r\n        if (40965 in exif_dict[\"Exif\"]) {\r\n            pointer = exif_dict[\"Exif\"][40965];\r\n            exif_dict[\"Interop\"] = exifReader.get_ifd(pointer, \"Interop\");\r\n        }\r\n        if (first_ifd_pointer != \"\\x00\\x00\\x00\\x00\") {\r\n            pointer = unpack(exifReader.endian_mark + \"L\",\r\n                first_ifd_pointer)[0];\r\n            exif_dict[\"1st\"] = exifReader.get_ifd(pointer, \"1st\");\r\n            if ((513 in exif_dict[\"1st\"]) && (514 in exif_dict[\"1st\"])) {\r\n                var end = exif_dict[\"1st\"][513] + exif_dict[\"1st\"][514];\r\n                var thumb = exifReader.tiftag.slice(exif_dict[\"1st\"][513], end);\r\n                exif_dict[\"thumbnail\"] = thumb;\r\n            }\r\n        }\r\n\r\n        return exif_dict;\r\n    };\r\n\r\n\r\n    that.dump = function (exif_dict_original) {\r\n        var TIFF_HEADER_LENGTH = 8;\r\n\r\n        var exif_dict = copy(exif_dict_original);\r\n        var header = \"Exif\\x00\\x00\\x4d\\x4d\\x00\\x2a\\x00\\x00\\x00\\x08\";\r\n        var exif_is = false;\r\n        var gps_is = false;\r\n        var interop_is = false;\r\n        var first_is = false;\r\n\r\n        var zeroth_ifd,\r\n            exif_ifd,\r\n            interop_ifd,\r\n            gps_ifd,\r\n            first_ifd;\r\n        \r\n        if (\"0th\" in exif_dict) {\r\n            zeroth_ifd = exif_dict[\"0th\"];\r\n        } else {\r\n            zeroth_ifd = {};\r\n        }\r\n        \r\n        if (((\"Exif\" in exif_dict) && (Object.keys(exif_dict[\"Exif\"]).length)) ||\r\n            ((\"Interop\" in exif_dict) && (Object.keys(exif_dict[\"Interop\"]).length))) {\r\n            zeroth_ifd[34665] = 1;\r\n            exif_is = true;\r\n            exif_ifd = exif_dict[\"Exif\"];\r\n            if ((\"Interop\" in exif_dict) && Object.keys(exif_dict[\"Interop\"]).length) {\r\n                exif_ifd[40965] = 1;\r\n                interop_is = true;\r\n                interop_ifd = exif_dict[\"Interop\"];\r\n            } else if (Object.keys(exif_ifd).indexOf(that.ExifIFD.InteroperabilityTag.toString()) > -1) {\r\n                delete exif_ifd[40965];\r\n            }\r\n        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.ExifTag.toString()) > -1) {\r\n            delete zeroth_ifd[34665];\r\n        }\r\n\r\n        if ((\"GPS\" in exif_dict) && (Object.keys(exif_dict[\"GPS\"]).length)) {\r\n            zeroth_ifd[that.ImageIFD.GPSTag] = 1;\r\n            gps_is = true;\r\n            gps_ifd = exif_dict[\"GPS\"];\r\n        } else if (Object.keys(zeroth_ifd).indexOf(that.ImageIFD.GPSTag.toString()) > -1) {\r\n            delete zeroth_ifd[that.ImageIFD.GPSTag];\r\n        }\r\n        \r\n        if ((\"1st\" in exif_dict) &&\r\n            (\"thumbnail\" in exif_dict) &&\r\n            (exif_dict[\"thumbnail\"] != null)) {\r\n            first_is = true;\r\n            exif_dict[\"1st\"][513] = 1;\r\n            exif_dict[\"1st\"][514] = 1;\r\n            first_ifd = exif_dict[\"1st\"];\r\n        }\r\n        \r\n        var zeroth_set = _dict_to_bytes(zeroth_ifd, \"0th\", 0);\r\n        var zeroth_length = (zeroth_set[0].length + exif_is * 12 + gps_is * 12 + 4 +\r\n            zeroth_set[1].length);\r\n\r\n        var exif_set,\r\n            exif_bytes = \"\",\r\n            exif_length = 0,\r\n            gps_set,\r\n            gps_bytes = \"\",\r\n            gps_length = 0,\r\n            interop_set,\r\n            interop_bytes = \"\",\r\n            interop_length = 0,\r\n            first_set,\r\n            first_bytes = \"\",\r\n            thumbnail;\r\n        if (exif_is) {\r\n            exif_set = _dict_to_bytes(exif_ifd, \"Exif\", zeroth_length);\r\n            exif_length = exif_set[0].length + interop_is * 12 + exif_set[1].length;\r\n        }\r\n        if (gps_is) {\r\n            gps_set = _dict_to_bytes(gps_ifd, \"GPS\", zeroth_length + exif_length);\r\n            gps_bytes = gps_set.join(\"\");\r\n            gps_length = gps_bytes.length;\r\n        }\r\n        if (interop_is) {\r\n            var offset = zeroth_length + exif_length + gps_length;\r\n            interop_set = _dict_to_bytes(interop_ifd, \"Interop\", offset);\r\n            interop_bytes = interop_set.join(\"\");\r\n            interop_length = interop_bytes.length;\r\n        }\r\n        if (first_is) {\r\n            var offset = zeroth_length + exif_length + gps_length + interop_length;\r\n            first_set = _dict_to_bytes(first_ifd, \"1st\", offset);\r\n            thumbnail = _get_thumbnail(exif_dict[\"thumbnail\"]);\r\n            if (thumbnail.length > 64000) {\r\n                throw new Error(\"Given thumbnail is too large. max 64kB\");\r\n            }\r\n        }\r\n\r\n        var exif_pointer = \"\",\r\n            gps_pointer = \"\",\r\n            interop_pointer = \"\",\r\n            first_ifd_pointer = \"\\x00\\x00\\x00\\x00\";\r\n        if (exif_is) {\r\n            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length;\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 34665;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            exif_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (gps_is) {\r\n            var pointer_value = TIFF_HEADER_LENGTH + zeroth_length + exif_length;\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 34853;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            gps_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (interop_is) {\r\n            var pointer_value = (TIFF_HEADER_LENGTH +\r\n                zeroth_length + exif_length + gps_length);\r\n            var pointer_str = pack(\">L\", [pointer_value]);\r\n            var key = 40965;\r\n            var key_str = pack(\">H\", [key]);\r\n            var type_str = pack(\">H\", [TYPES[\"Long\"]]);\r\n            var length_str = pack(\">L\", [1]);\r\n            interop_pointer = key_str + type_str + length_str + pointer_str;\r\n        }\r\n        if (first_is) {\r\n            var pointer_value = (TIFF_HEADER_LENGTH + zeroth_length +\r\n                exif_length + gps_length + interop_length);\r\n            first_ifd_pointer = pack(\">L\", [pointer_value]);\r\n            var thumbnail_pointer = (pointer_value + first_set[0].length + 24 +\r\n                4 + first_set[1].length);\r\n            var thumbnail_p_bytes = (\"\\x02\\x01\\x00\\x04\\x00\\x00\\x00\\x01\" +\r\n                pack(\">L\", [thumbnail_pointer]));\r\n            var thumbnail_length_bytes = (\"\\x02\\x02\\x00\\x04\\x00\\x00\\x00\\x01\" +\r\n                pack(\">L\", [thumbnail.length]));\r\n            first_bytes = (first_set[0] + thumbnail_p_bytes +\r\n                thumbnail_length_bytes + \"\\x00\\x00\\x00\\x00\" +\r\n                first_set[1] + thumbnail);\r\n        }\r\n\r\n        var zeroth_bytes = (zeroth_set[0] + exif_pointer + gps_pointer +\r\n            first_ifd_pointer + zeroth_set[1]);\r\n        if (exif_is) {\r\n            exif_bytes = exif_set[0] + interop_pointer + exif_set[1];\r\n        }\r\n\r\n        return (header + zeroth_bytes + exif_bytes + gps_bytes +\r\n            interop_bytes + first_bytes);\r\n    };\r\n\r\n\r\n    function copy(obj) {\r\n        return JSON.parse(JSON.stringify(obj));\r\n    }\r\n\r\n\r\n    function _get_thumbnail(jpeg) {\r\n        var segments = splitIntoSegments(jpeg);\r\n        while ((\"\\xff\\xe0\" <= segments[1].slice(0, 2)) && (segments[1].slice(0, 2) <= \"\\xff\\xef\")) {\r\n            segments = [segments[0]].concat(segments.slice(2));\r\n        }\r\n        return segments.join(\"\");\r\n    }\r\n\r\n\r\n    function _pack_byte(array) {\r\n        return pack(\">\" + nStr(\"B\", array.length), array);\r\n    }\r\n\r\n\r\n    function _pack_short(array) {\r\n        return pack(\">\" + nStr(\"H\", array.length), array);\r\n    }\r\n\r\n\r\n    function _pack_long(array) {\r\n        return pack(\">\" + nStr(\"L\", array.length), array);\r\n    }\r\n\r\n\r\n    function _value_to_bytes(raw_value, value_type, offset) {\r\n        var four_bytes_over = \"\";\r\n        var value_str = \"\";\r\n        var length,\r\n            new_value,\r\n            num,\r\n            den;\r\n\r\n        if (value_type == \"Byte\") {\r\n            length = raw_value.length;\r\n            if (length <= 4) {\r\n                value_str = (_pack_byte(raw_value) +\r\n                    nStr(\"\\x00\", 4 - length));\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_byte(raw_value);\r\n            }\r\n        } else if (value_type == \"Short\") {\r\n            length = raw_value.length;\r\n            if (length <= 2) {\r\n                value_str = (_pack_short(raw_value) +\r\n                    nStr(\"\\x00\\x00\", 2 - length));\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_short(raw_value);\r\n            }\r\n        } else if (value_type == \"Long\") {\r\n            length = raw_value.length;\r\n            if (length <= 1) {\r\n                value_str = _pack_long(raw_value);\r\n            } else {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = _pack_long(raw_value);\r\n            }\r\n        } else if (value_type == \"Ascii\") {\r\n            new_value = raw_value + \"\\x00\";\r\n            length = new_value.length;\r\n            if (length > 4) {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = new_value;\r\n            } else {\r\n                value_str = new_value + nStr(\"\\x00\", 4 - length);\r\n            }\r\n        } else if (value_type == \"Rational\") {\r\n            if (typeof (raw_value[0]) == \"number\") {\r\n                length = 1;\r\n                num = raw_value[0];\r\n                den = raw_value[1];\r\n                new_value = pack(\">L\", [num]) + pack(\">L\", [den]);\r\n            } else {\r\n                length = raw_value.length;\r\n                new_value = \"\";\r\n                for (var n = 0; n < length; n++) {\r\n                    num = raw_value[n][0];\r\n                    den = raw_value[n][1];\r\n                    new_value += (pack(\">L\", [num]) +\r\n                        pack(\">L\", [den]));\r\n                }\r\n            }\r\n            value_str = pack(\">L\", [offset]);\r\n            four_bytes_over = new_value;\r\n        } else if (value_type == \"SRational\") {\r\n            if (typeof (raw_value[0]) == \"number\") {\r\n                length = 1;\r\n                num = raw_value[0];\r\n                den = raw_value[1];\r\n                new_value = pack(\">l\", [num]) + pack(\">l\", [den]);\r\n            } else {\r\n                length = raw_value.length;\r\n                new_value = \"\";\r\n                for (var n = 0; n < length; n++) {\r\n                    num = raw_value[n][0];\r\n                    den = raw_value[n][1];\r\n                    new_value += (pack(\">l\", [num]) +\r\n                        pack(\">l\", [den]));\r\n                }\r\n            }\r\n            value_str = pack(\">L\", [offset]);\r\n            four_bytes_over = new_value;\r\n        } else if (value_type == \"Undefined\") {\r\n            length = raw_value.length;\r\n            if (length > 4) {\r\n                value_str = pack(\">L\", [offset]);\r\n                four_bytes_over = raw_value;\r\n            } else {\r\n                value_str = raw_value + nStr(\"\\x00\", 4 - length);\r\n            }\r\n        }\r\n\r\n        var length_str = pack(\">L\", [length]);\r\n\r\n        return [length_str, value_str, four_bytes_over];\r\n    }\r\n\r\n    function _dict_to_bytes(ifd_dict, ifd, ifd_offset) {\r\n        var TIFF_HEADER_LENGTH = 8;\r\n        var tag_count = Object.keys(ifd_dict).length;\r\n        var entry_header = pack(\">H\", [tag_count]);\r\n        var entries_length;\r\n        if ([\"0th\", \"1st\"].indexOf(ifd) > -1) {\r\n            entries_length = 2 + tag_count * 12 + 4;\r\n        } else {\r\n            entries_length = 2 + tag_count * 12;\r\n        }\r\n        var entries = \"\";\r\n        var values = \"\";\r\n        var key;\r\n\r\n        for (var key in ifd_dict) {\r\n            if (typeof (key) == \"string\") {\r\n                key = parseInt(key);\r\n            }\r\n            if ((ifd == \"0th\") && ([34665, 34853].indexOf(key) > -1)) {\r\n                continue;\r\n            } else if ((ifd == \"Exif\") && (key == 40965)) {\r\n                continue;\r\n            } else if ((ifd == \"1st\") && ([513, 514].indexOf(key) > -1)) {\r\n                continue;\r\n            }\r\n\r\n            var raw_value = ifd_dict[key];\r\n            var key_str = pack(\">H\", [key]);\r\n            var value_type = TAGS[ifd][key][\"type\"];\r\n            var type_str = pack(\">H\", [TYPES[value_type]]);\r\n\r\n            if (typeof (raw_value) == \"number\") {\r\n                raw_value = [raw_value];\r\n            }\r\n            var offset = TIFF_HEADER_LENGTH + entries_length + ifd_offset + values.length;\r\n            var b = _value_to_bytes(raw_value, value_type, offset);\r\n            var length_str = b[0];\r\n            var value_str = b[1];\r\n            var four_bytes_over = b[2];\r\n\r\n            entries += key_str + type_str + length_str + value_str;\r\n            values += four_bytes_over;\r\n        }\r\n\r\n        return [entry_header + entries, values];\r\n    }\r\n\r\n\r\n\r\n    function ExifReader(data) {\r\n        var segments,\r\n            app1;\r\n        if (data.slice(0, 2) == \"\\xff\\xd8\") { // JPEG\r\n            segments = splitIntoSegments(data);\r\n            app1 = getExifSeg(segments);\r\n            if (app1) {\r\n                this.tiftag = app1.slice(10);\r\n            } else {\r\n                this.tiftag = null;\r\n            }\r\n        } else if ([\"\\x49\\x49\", \"\\x4d\\x4d\"].indexOf(data.slice(0, 2)) > -1) { // TIFF\r\n            this.tiftag = data;\r\n        } else if (data.slice(0, 4) == \"Exif\") { // Exif\r\n            this.tiftag = data.slice(6);\r\n        } else {\r\n            throw new Error(\"Given file is neither JPEG nor TIFF.\");\r\n        }\r\n    }\r\n\r\n    ExifReader.prototype = {\r\n        get_ifd: function (pointer, ifd_name) {\r\n            var ifd_dict = {};\r\n            var tag_count = unpack(this.endian_mark + \"H\",\r\n                this.tiftag.slice(pointer, pointer + 2))[0];\r\n            var offset = pointer + 2;\r\n            var t;\r\n            if ([\"0th\", \"1st\"].indexOf(ifd_name) > -1) {\r\n                t = \"Image\";\r\n            } else {\r\n                t = ifd_name;\r\n            }\r\n\r\n            for (var x = 0; x < tag_count; x++) {\r\n                pointer = offset + 12 * x;\r\n                var tag = unpack(this.endian_mark + \"H\",\r\n                    this.tiftag.slice(pointer, pointer + 2))[0];\r\n                var value_type = unpack(this.endian_mark + \"H\",\r\n                    this.tiftag.slice(pointer + 2, pointer + 4))[0];\r\n                var value_num = unpack(this.endian_mark + \"L\",\r\n                    this.tiftag.slice(pointer + 4, pointer + 8))[0];\r\n                var value = this.tiftag.slice(pointer + 8, pointer + 12);\r\n\r\n                var v_set = [value_type, value_num, value];\r\n                if (tag in TAGS[t]) {\r\n                    ifd_dict[tag] = this.convert_value(v_set);\r\n                }\r\n            }\r\n\r\n            if (ifd_name == \"0th\") {\r\n                pointer = offset + 12 * tag_count;\r\n                ifd_dict[\"first_ifd_pointer\"] = this.tiftag.slice(pointer, pointer + 4);\r\n            }\r\n\r\n            return ifd_dict;\r\n        },\r\n\r\n        convert_value: function (val) {\r\n            var data = null;\r\n            var t = val[0];\r\n            var length = val[1];\r\n            var value = val[2];\r\n            var pointer;\r\n\r\n            if (t == 1) { // BYTE\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"B\", length),\r\n                        this.tiftag.slice(pointer, pointer + length));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"B\", length), value.slice(0, length));\r\n                }\r\n            } else if (t == 2) { // ASCII\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = this.tiftag.slice(pointer, pointer + length - 1);\r\n                } else {\r\n                    data = value.slice(0, length - 1);\r\n                }\r\n            } else if (t == 3) { // SHORT\r\n                if (length > 2) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"H\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 2));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"H\", length),\r\n                        value.slice(0, length * 2));\r\n                }\r\n            } else if (t == 4) { // LONG\r\n                if (length > 1) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"L\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 4));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"L\", length),\r\n                        value);\r\n                }\r\n            } else if (t == 5) { // RATIONAL\r\n                pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                if (length > 1) {\r\n                    data = [];\r\n                    for (var x = 0; x < length; x++) {\r\n                        data.push([unpack(this.endian_mark + \"L\",\r\n                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],\r\n                                   unpack(this.endian_mark + \"L\",\r\n                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]\r\n                                   ]);\r\n                    }\r\n                } else {\r\n                    data = [unpack(this.endian_mark + \"L\",\r\n                            this.tiftag.slice(pointer, pointer + 4))[0],\r\n                            unpack(this.endian_mark + \"L\",\r\n                            this.tiftag.slice(pointer + 4, pointer + 8))[0]\r\n                            ];\r\n                }\r\n            } else if (t == 7) { // UNDEFINED BYTES\r\n                if (length > 4) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = this.tiftag.slice(pointer, pointer + length);\r\n                } else {\r\n                    data = value.slice(0, length);\r\n                }\r\n            } else if (t == 9) { // SLONG\r\n                if (length > 1) {\r\n                    pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                    data = unpack(this.endian_mark + nStr(\"l\", length),\r\n                        this.tiftag.slice(pointer, pointer + length * 4));\r\n                } else {\r\n                    data = unpack(this.endian_mark + nStr(\"l\", length),\r\n                        value);\r\n                }\r\n            } else if (t == 10) { // SRATIONAL\r\n                pointer = unpack(this.endian_mark + \"L\", value)[0];\r\n                if (length > 1) {\r\n                    data = [];\r\n                    for (var x = 0; x < length; x++) {\r\n                        data.push([unpack(this.endian_mark + \"l\",\r\n                                this.tiftag.slice(pointer + x * 8, pointer + 4 + x * 8))[0],\r\n                                   unpack(this.endian_mark + \"l\",\r\n                                this.tiftag.slice(pointer + 4 + x * 8, pointer + 8 + x * 8))[0]\r\n                                  ]);\r\n                    }\r\n                } else {\r\n                    data = [unpack(this.endian_mark + \"l\",\r\n                            this.tiftag.slice(pointer, pointer + 4))[0],\r\n                            unpack(this.endian_mark + \"l\",\r\n                            this.tiftag.slice(pointer + 4, pointer + 8))[0]\r\n                           ];\r\n                }\r\n            } else {\r\n                throw new Error(\"Exif might be wrong. Got incorrect value \" +\r\n                    \"type to decode. type:\" + t);\r\n            }\r\n\r\n            if ((data instanceof Array) && (data.length == 1)) {\r\n                return data[0];\r\n            } else {\r\n                return data;\r\n            }\r\n        },\r\n    };\r\n\r\n\r\n    if (typeof window !== \"undefined\" && typeof window.btoa === \"function\") {\r\n        var btoa = window.btoa;\r\n    }\r\n    if (typeof btoa === \"undefined\") {\r\n        var btoa = function (input) {        var output = \"\";\r\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n            var i = 0;\r\n            var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n            while (i < input.length) {\r\n\r\n                chr1 = input.charCodeAt(i++);\r\n                chr2 = input.charCodeAt(i++);\r\n                chr3 = input.charCodeAt(i++);\r\n\r\n                enc1 = chr1 >> 2;\r\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n                enc4 = chr3 & 63;\r\n\r\n                if (isNaN(chr2)) {\r\n                    enc3 = enc4 = 64;\r\n                } else if (isNaN(chr3)) {\r\n                    enc4 = 64;\r\n                }\r\n\r\n                output = output +\r\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\r\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\r\n            }\r\n\r\n            return output;\r\n        };\r\n    }\r\n    \r\n    \r\n    if (typeof window !== \"undefined\" && typeof window.atob === \"function\") {\r\n        var atob = window.atob;\r\n    }\r\n    if (typeof atob === \"undefined\") {\r\n        var atob = function (input) {\r\n            var output = \"\";\r\n            var chr1, chr2, chr3;\r\n            var enc1, enc2, enc3, enc4;\r\n            var i = 0;\r\n            var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n            while (i < input.length) {\r\n\r\n                enc1 = keyStr.indexOf(input.charAt(i++));\r\n                enc2 = keyStr.indexOf(input.charAt(i++));\r\n                enc3 = keyStr.indexOf(input.charAt(i++));\r\n                enc4 = keyStr.indexOf(input.charAt(i++));\r\n\r\n                chr1 = (enc1 << 2) | (enc2 >> 4);\r\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n                chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n                output = output + String.fromCharCode(chr1);\r\n\r\n                if (enc3 != 64) {\r\n                    output = output + String.fromCharCode(chr2);\r\n                }\r\n                if (enc4 != 64) {\r\n                    output = output + String.fromCharCode(chr3);\r\n                }\r\n\r\n            }\r\n\r\n            return output;\r\n        };\r\n    }\r\n\r\n\r\n    function getImageSize(imageArray) {\r\n        var segments = slice2Segments(imageArray);\r\n        var seg,\r\n            width,\r\n            height,\r\n            SOF = [192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207];\r\n\r\n        for (var x = 0; x < segments.length; x++) {\r\n            seg = segments[x];\r\n            if (SOF.indexOf(seg[1]) >= 0) {\r\n                height = seg[5] * 256 + seg[6];\r\n                width = seg[7] * 256 + seg[8];\r\n                break;\r\n            }\r\n        }\r\n        return [width, height];\r\n    }\r\n\r\n\r\n    function pack(mark, array) {\r\n        if (!(array instanceof Array)) {\r\n            throw new Error(\"'pack' error. Got invalid type argument.\");\r\n        }\r\n        if ((mark.length - 1) != array.length) {\r\n            throw new Error(\"'pack' error. \" + (mark.length - 1) + \" marks, \" + array.length + \" elements.\");\r\n        }\r\n\r\n        var littleEndian;\r\n        if (mark[0] == \"<\") {\r\n            littleEndian = true;\r\n        } else if (mark[0] == \">\") {\r\n            littleEndian = false;\r\n        } else {\r\n            throw new Error(\"\");\r\n        }\r\n        var packed = \"\";\r\n        var p = 1;\r\n        var val = null;\r\n        var c = null;\r\n        var valStr = null;\r\n\r\n        while (c = mark[p]) {\r\n            if (c.toLowerCase() == \"b\") {\r\n                val = array[p - 1];\r\n                if ((c == \"b\") && (val < 0)) {\r\n                    val += 0x100;\r\n                }\r\n                if ((val > 0xff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(val);\r\n                }\r\n            } else if (c == \"H\") {\r\n                val = array[p - 1];\r\n                if ((val > 0xffff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +\r\n                        String.fromCharCode(val % 0x100);\r\n                    if (littleEndian) {\r\n                        valStr = valStr.split(\"\").reverse().join(\"\");\r\n                    }\r\n                }\r\n            } else if (c.toLowerCase() == \"l\") {\r\n                val = array[p - 1];\r\n                if ((c == \"l\") && (val < 0)) {\r\n                    val += 0x100000000;\r\n                }\r\n                if ((val > 0xffffffff) || (val < 0)) {\r\n                    throw new Error(\"'pack' error.\");\r\n                } else {\r\n                    valStr = String.fromCharCode(Math.floor(val / 0x1000000)) +\r\n                        String.fromCharCode(Math.floor((val % 0x1000000) / 0x10000)) +\r\n                        String.fromCharCode(Math.floor((val % 0x10000) / 0x100)) +\r\n                        String.fromCharCode(val % 0x100);\r\n                    if (littleEndian) {\r\n                        valStr = valStr.split(\"\").reverse().join(\"\");\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"'pack' error.\");\r\n            }\r\n\r\n            packed += valStr;\r\n            p += 1;\r\n        }\r\n\r\n        return packed;\r\n    }\r\n\r\n    function unpack(mark, str) {\r\n        if (typeof (str) != \"string\") {\r\n            throw new Error(\"'unpack' error. Got invalid type argument.\");\r\n        }\r\n        var l = 0;\r\n        for (var markPointer = 1; markPointer < mark.length; markPointer++) {\r\n            if (mark[markPointer].toLowerCase() == \"b\") {\r\n                l += 1;\r\n            } else if (mark[markPointer].toLowerCase() == \"h\") {\r\n                l += 2;\r\n            } else if (mark[markPointer].toLowerCase() == \"l\") {\r\n                l += 4;\r\n            } else {\r\n                throw new Error(\"'unpack' error. Got invalid mark.\");\r\n            }\r\n        }\r\n\r\n        if (l != str.length) {\r\n            throw new Error(\"'unpack' error. Mismatch between symbol and string length. \" + l + \":\" + str.length);\r\n        }\r\n\r\n        var littleEndian;\r\n        if (mark[0] == \"<\") {\r\n            littleEndian = true;\r\n        } else if (mark[0] == \">\") {\r\n            littleEndian = false;\r\n        } else {\r\n            throw new Error(\"'unpack' error.\");\r\n        }\r\n        var unpacked = [];\r\n        var strPointer = 0;\r\n        var p = 1;\r\n        var val = null;\r\n        var c = null;\r\n        var length = null;\r\n        var sliced = \"\";\r\n\r\n        while (c = mark[p]) {\r\n            if (c.toLowerCase() == \"b\") {\r\n                length = 1;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                val = sliced.charCodeAt(0);\r\n                if ((c == \"b\") && (val >= 0x80)) {\r\n                    val -= 0x100;\r\n                }\r\n            } else if (c == \"H\") {\r\n                length = 2;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                if (littleEndian) {\r\n                    sliced = sliced.split(\"\").reverse().join(\"\");\r\n                }\r\n                val = sliced.charCodeAt(0) * 0x100 +\r\n                    sliced.charCodeAt(1);\r\n            } else if (c.toLowerCase() == \"l\") {\r\n                length = 4;\r\n                sliced = str.slice(strPointer, strPointer + length);\r\n                if (littleEndian) {\r\n                    sliced = sliced.split(\"\").reverse().join(\"\");\r\n                }\r\n                val = sliced.charCodeAt(0) * 0x1000000 +\r\n                    sliced.charCodeAt(1) * 0x10000 +\r\n                    sliced.charCodeAt(2) * 0x100 +\r\n                    sliced.charCodeAt(3);\r\n                if ((c == \"l\") && (val >= 0x80000000)) {\r\n                    val -= 0x100000000;\r\n                }\r\n            } else {\r\n                throw new Error(\"'unpack' error. \" + c);\r\n            }\r\n\r\n            unpacked.push(val);\r\n            strPointer += length;\r\n            p += 1;\r\n        }\r\n\r\n        return unpacked;\r\n    }\r\n\r\n    function nStr(ch, num) {\r\n        var str = \"\";\r\n        for (var i = 0; i < num; i++) {\r\n            str += ch;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function splitIntoSegments(data) {\r\n        if (data.slice(0, 2) != \"\\xff\\xd8\") {\r\n            throw new Error(\"Given data isn't JPEG.\");\r\n        }\r\n\r\n        var head = 2;\r\n        var segments = [\"\\xff\\xd8\"];\r\n        while (true) {\r\n            if (data.slice(head, head + 2) == \"\\xff\\xda\") {\r\n                segments.push(data.slice(head));\r\n                break;\r\n            } else {\r\n                var length = unpack(\">H\", data.slice(head + 2, head + 4))[0];\r\n                var endPoint = head + length + 2;\r\n                segments.push(data.slice(head, endPoint));\r\n                head = endPoint;\r\n            }\r\n\r\n            if (head >= data.length) {\r\n                throw new Error(\"Wrong JPEG data.\");\r\n            }\r\n        }\r\n        return segments;\r\n    }\r\n\r\n\r\n    function getExifSeg(segments) {\r\n        var seg;\r\n        for (var i = 0; i < segments.length; i++) {\r\n            seg = segments[i];\r\n            if (seg.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                   seg.slice(4, 10) == \"Exif\\x00\\x00\") {\r\n                return seg;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    function mergeSegments(segments, exif) {\r\n        var hasExifSegment = false;\r\n        var additionalAPP1ExifSegments = [];\r\n\r\n        segments.forEach(function(segment, i) {\r\n            // Replace first occurence of APP1:Exif segment\r\n            if (segment.slice(0, 2) == \"\\xff\\xe1\" &&\r\n                segment.slice(4, 10) == \"Exif\\x00\\x00\"\r\n            ) {\r\n                if (!hasExifSegment) {\r\n                    segments[i] = exif;\r\n                    hasExifSegment = true;\r\n                } else {\r\n                    additionalAPP1ExifSegments.unshift(i);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Remove additional occurences of APP1:Exif segment\r\n        additionalAPP1ExifSegments.forEach(function(segmentIndex) {\r\n            segments.splice(segmentIndex, 1);\r\n        });\r\n\r\n        if (!hasExifSegment && exif) {\r\n            segments = [segments[0], exif].concat(segments.slice(1));\r\n        }\r\n\r\n        return segments.join(\"\");\r\n    }\r\n\r\n\r\n    function toHex(str) {\r\n        var hexStr = \"\";\r\n        for (var i = 0; i < str.length; i++) {\r\n            var h = str.charCodeAt(i);\r\n            var hex = ((h < 10) ? \"0\" : \"\") + h.toString(16);\r\n            hexStr += hex + \" \";\r\n        }\r\n        return hexStr;\r\n    }\r\n\r\n\r\n    var TYPES = {\r\n        \"Byte\": 1,\r\n        \"Ascii\": 2,\r\n        \"Short\": 3,\r\n        \"Long\": 4,\r\n        \"Rational\": 5,\r\n        \"Undefined\": 7,\r\n        \"SLong\": 9,\r\n        \"SRational\": 10\r\n    };\r\n\r\n\r\n    var TAGS = {\r\n        'Image': {\r\n            11: {\r\n                'name': 'ProcessingSoftware',\r\n                'type': 'Ascii'\r\n            },\r\n            254: {\r\n                'name': 'NewSubfileType',\r\n                'type': 'Long'\r\n            },\r\n            255: {\r\n                'name': 'SubfileType',\r\n                'type': 'Short'\r\n            },\r\n            256: {\r\n                'name': 'ImageWidth',\r\n                'type': 'Long'\r\n            },\r\n            257: {\r\n                'name': 'ImageLength',\r\n                'type': 'Long'\r\n            },\r\n            258: {\r\n                'name': 'BitsPerSample',\r\n                'type': 'Short'\r\n            },\r\n            259: {\r\n                'name': 'Compression',\r\n                'type': 'Short'\r\n            },\r\n            262: {\r\n                'name': 'PhotometricInterpretation',\r\n                'type': 'Short'\r\n            },\r\n            263: {\r\n                'name': 'Threshholding',\r\n                'type': 'Short'\r\n            },\r\n            264: {\r\n                'name': 'CellWidth',\r\n                'type': 'Short'\r\n            },\r\n            265: {\r\n                'name': 'CellLength',\r\n                'type': 'Short'\r\n            },\r\n            266: {\r\n                'name': 'FillOrder',\r\n                'type': 'Short'\r\n            },\r\n            269: {\r\n                'name': 'DocumentName',\r\n                'type': 'Ascii'\r\n            },\r\n            270: {\r\n                'name': 'ImageDescription',\r\n                'type': 'Ascii'\r\n            },\r\n            271: {\r\n                'name': 'Make',\r\n                'type': 'Ascii'\r\n            },\r\n            272: {\r\n                'name': 'Model',\r\n                'type': 'Ascii'\r\n            },\r\n            273: {\r\n                'name': 'StripOffsets',\r\n                'type': 'Long'\r\n            },\r\n            274: {\r\n                'name': 'Orientation',\r\n                'type': 'Short'\r\n            },\r\n            277: {\r\n                'name': 'SamplesPerPixel',\r\n                'type': 'Short'\r\n            },\r\n            278: {\r\n                'name': 'RowsPerStrip',\r\n                'type': 'Long'\r\n            },\r\n            279: {\r\n                'name': 'StripByteCounts',\r\n                'type': 'Long'\r\n            },\r\n            282: {\r\n                'name': 'XResolution',\r\n                'type': 'Rational'\r\n            },\r\n            283: {\r\n                'name': 'YResolution',\r\n                'type': 'Rational'\r\n            },\r\n            284: {\r\n                'name': 'PlanarConfiguration',\r\n                'type': 'Short'\r\n            },\r\n            290: {\r\n                'name': 'GrayResponseUnit',\r\n                'type': 'Short'\r\n            },\r\n            291: {\r\n                'name': 'GrayResponseCurve',\r\n                'type': 'Short'\r\n            },\r\n            292: {\r\n                'name': 'T4Options',\r\n                'type': 'Long'\r\n            },\r\n            293: {\r\n                'name': 'T6Options',\r\n                'type': 'Long'\r\n            },\r\n            296: {\r\n                'name': 'ResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            301: {\r\n                'name': 'TransferFunction',\r\n                'type': 'Short'\r\n            },\r\n            305: {\r\n                'name': 'Software',\r\n                'type': 'Ascii'\r\n            },\r\n            306: {\r\n                'name': 'DateTime',\r\n                'type': 'Ascii'\r\n            },\r\n            315: {\r\n                'name': 'Artist',\r\n                'type': 'Ascii'\r\n            },\r\n            316: {\r\n                'name': 'HostComputer',\r\n                'type': 'Ascii'\r\n            },\r\n            317: {\r\n                'name': 'Predictor',\r\n                'type': 'Short'\r\n            },\r\n            318: {\r\n                'name': 'WhitePoint',\r\n                'type': 'Rational'\r\n            },\r\n            319: {\r\n                'name': 'PrimaryChromaticities',\r\n                'type': 'Rational'\r\n            },\r\n            320: {\r\n                'name': 'ColorMap',\r\n                'type': 'Short'\r\n            },\r\n            321: {\r\n                'name': 'HalftoneHints',\r\n                'type': 'Short'\r\n            },\r\n            322: {\r\n                'name': 'TileWidth',\r\n                'type': 'Short'\r\n            },\r\n            323: {\r\n                'name': 'TileLength',\r\n                'type': 'Short'\r\n            },\r\n            324: {\r\n                'name': 'TileOffsets',\r\n                'type': 'Short'\r\n            },\r\n            325: {\r\n                'name': 'TileByteCounts',\r\n                'type': 'Short'\r\n            },\r\n            330: {\r\n                'name': 'SubIFDs',\r\n                'type': 'Long'\r\n            },\r\n            332: {\r\n                'name': 'InkSet',\r\n                'type': 'Short'\r\n            },\r\n            333: {\r\n                'name': 'InkNames',\r\n                'type': 'Ascii'\r\n            },\r\n            334: {\r\n                'name': 'NumberOfInks',\r\n                'type': 'Short'\r\n            },\r\n            336: {\r\n                'name': 'DotRange',\r\n                'type': 'Byte'\r\n            },\r\n            337: {\r\n                'name': 'TargetPrinter',\r\n                'type': 'Ascii'\r\n            },\r\n            338: {\r\n                'name': 'ExtraSamples',\r\n                'type': 'Short'\r\n            },\r\n            339: {\r\n                'name': 'SampleFormat',\r\n                'type': 'Short'\r\n            },\r\n            340: {\r\n                'name': 'SMinSampleValue',\r\n                'type': 'Short'\r\n            },\r\n            341: {\r\n                'name': 'SMaxSampleValue',\r\n                'type': 'Short'\r\n            },\r\n            342: {\r\n                'name': 'TransferRange',\r\n                'type': 'Short'\r\n            },\r\n            343: {\r\n                'name': 'ClipPath',\r\n                'type': 'Byte'\r\n            },\r\n            344: {\r\n                'name': 'XClipPathUnits',\r\n                'type': 'Long'\r\n            },\r\n            345: {\r\n                'name': 'YClipPathUnits',\r\n                'type': 'Long'\r\n            },\r\n            346: {\r\n                'name': 'Indexed',\r\n                'type': 'Short'\r\n            },\r\n            347: {\r\n                'name': 'JPEGTables',\r\n                'type': 'Undefined'\r\n            },\r\n            351: {\r\n                'name': 'OPIProxy',\r\n                'type': 'Short'\r\n            },\r\n            512: {\r\n                'name': 'JPEGProc',\r\n                'type': 'Long'\r\n            },\r\n            513: {\r\n                'name': 'JPEGInterchangeFormat',\r\n                'type': 'Long'\r\n            },\r\n            514: {\r\n                'name': 'JPEGInterchangeFormatLength',\r\n                'type': 'Long'\r\n            },\r\n            515: {\r\n                'name': 'JPEGRestartInterval',\r\n                'type': 'Short'\r\n            },\r\n            517: {\r\n                'name': 'JPEGLosslessPredictors',\r\n                'type': 'Short'\r\n            },\r\n            518: {\r\n                'name': 'JPEGPointTransforms',\r\n                'type': 'Short'\r\n            },\r\n            519: {\r\n                'name': 'JPEGQTables',\r\n                'type': 'Long'\r\n            },\r\n            520: {\r\n                'name': 'JPEGDCTables',\r\n                'type': 'Long'\r\n            },\r\n            521: {\r\n                'name': 'JPEGACTables',\r\n                'type': 'Long'\r\n            },\r\n            529: {\r\n                'name': 'YCbCrCoefficients',\r\n                'type': 'Rational'\r\n            },\r\n            530: {\r\n                'name': 'YCbCrSubSampling',\r\n                'type': 'Short'\r\n            },\r\n            531: {\r\n                'name': 'YCbCrPositioning',\r\n                'type': 'Short'\r\n            },\r\n            532: {\r\n                'name': 'ReferenceBlackWhite',\r\n                'type': 'Rational'\r\n            },\r\n            700: {\r\n                'name': 'XMLPacket',\r\n                'type': 'Byte'\r\n            },\r\n            18246: {\r\n                'name': 'Rating',\r\n                'type': 'Short'\r\n            },\r\n            18249: {\r\n                'name': 'RatingPercent',\r\n                'type': 'Short'\r\n            },\r\n            32781: {\r\n                'name': 'ImageID',\r\n                'type': 'Ascii'\r\n            },\r\n            33421: {\r\n                'name': 'CFARepeatPatternDim',\r\n                'type': 'Short'\r\n            },\r\n            33422: {\r\n                'name': 'CFAPattern',\r\n                'type': 'Byte'\r\n            },\r\n            33423: {\r\n                'name': 'BatteryLevel',\r\n                'type': 'Rational'\r\n            },\r\n            33432: {\r\n                'name': 'Copyright',\r\n                'type': 'Ascii'\r\n            },\r\n            33434: {\r\n                'name': 'ExposureTime',\r\n                'type': 'Rational'\r\n            },\r\n            34377: {\r\n                'name': 'ImageResources',\r\n                'type': 'Byte'\r\n            },\r\n            34665: {\r\n                'name': 'ExifTag',\r\n                'type': 'Long'\r\n            },\r\n            34675: {\r\n                'name': 'InterColorProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            34853: {\r\n                'name': 'GPSTag',\r\n                'type': 'Long'\r\n            },\r\n            34857: {\r\n                'name': 'Interlace',\r\n                'type': 'Short'\r\n            },\r\n            34858: {\r\n                'name': 'TimeZoneOffset',\r\n                'type': 'Long'\r\n            },\r\n            34859: {\r\n                'name': 'SelfTimerMode',\r\n                'type': 'Short'\r\n            },\r\n            37387: {\r\n                'name': 'FlashEnergy',\r\n                'type': 'Rational'\r\n            },\r\n            37388: {\r\n                'name': 'SpatialFrequencyResponse',\r\n                'type': 'Undefined'\r\n            },\r\n            37389: {\r\n                'name': 'Noise',\r\n                'type': 'Undefined'\r\n            },\r\n            37390: {\r\n                'name': 'FocalPlaneXResolution',\r\n                'type': 'Rational'\r\n            },\r\n            37391: {\r\n                'name': 'FocalPlaneYResolution',\r\n                'type': 'Rational'\r\n            },\r\n            37392: {\r\n                'name': 'FocalPlaneResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            37393: {\r\n                'name': 'ImageNumber',\r\n                'type': 'Long'\r\n            },\r\n            37394: {\r\n                'name': 'SecurityClassification',\r\n                'type': 'Ascii'\r\n            },\r\n            37395: {\r\n                'name': 'ImageHistory',\r\n                'type': 'Ascii'\r\n            },\r\n            37397: {\r\n                'name': 'ExposureIndex',\r\n                'type': 'Rational'\r\n            },\r\n            37398: {\r\n                'name': 'TIFFEPStandardID',\r\n                'type': 'Byte'\r\n            },\r\n            37399: {\r\n                'name': 'SensingMethod',\r\n                'type': 'Short'\r\n            },\r\n            40091: {\r\n                'name': 'XPTitle',\r\n                'type': 'Byte'\r\n            },\r\n            40092: {\r\n                'name': 'XPComment',\r\n                'type': 'Byte'\r\n            },\r\n            40093: {\r\n                'name': 'XPAuthor',\r\n                'type': 'Byte'\r\n            },\r\n            40094: {\r\n                'name': 'XPKeywords',\r\n                'type': 'Byte'\r\n            },\r\n            40095: {\r\n                'name': 'XPSubject',\r\n                'type': 'Byte'\r\n            },\r\n            50341: {\r\n                'name': 'PrintImageMatching',\r\n                'type': 'Undefined'\r\n            },\r\n            50706: {\r\n                'name': 'DNGVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50707: {\r\n                'name': 'DNGBackwardVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50708: {\r\n                'name': 'UniqueCameraModel',\r\n                'type': 'Ascii'\r\n            },\r\n            50709: {\r\n                'name': 'LocalizedCameraModel',\r\n                'type': 'Byte'\r\n            },\r\n            50710: {\r\n                'name': 'CFAPlaneColor',\r\n                'type': 'Byte'\r\n            },\r\n            50711: {\r\n                'name': 'CFALayout',\r\n                'type': 'Short'\r\n            },\r\n            50712: {\r\n                'name': 'LinearizationTable',\r\n                'type': 'Short'\r\n            },\r\n            50713: {\r\n                'name': 'BlackLevelRepeatDim',\r\n                'type': 'Short'\r\n            },\r\n            50714: {\r\n                'name': 'BlackLevel',\r\n                'type': 'Rational'\r\n            },\r\n            50715: {\r\n                'name': 'BlackLevelDeltaH',\r\n                'type': 'SRational'\r\n            },\r\n            50716: {\r\n                'name': 'BlackLevelDeltaV',\r\n                'type': 'SRational'\r\n            },\r\n            50717: {\r\n                'name': 'WhiteLevel',\r\n                'type': 'Short'\r\n            },\r\n            50718: {\r\n                'name': 'DefaultScale',\r\n                'type': 'Rational'\r\n            },\r\n            50719: {\r\n                'name': 'DefaultCropOrigin',\r\n                'type': 'Short'\r\n            },\r\n            50720: {\r\n                'name': 'DefaultCropSize',\r\n                'type': 'Short'\r\n            },\r\n            50721: {\r\n                'name': 'ColorMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50722: {\r\n                'name': 'ColorMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50723: {\r\n                'name': 'CameraCalibration1',\r\n                'type': 'SRational'\r\n            },\r\n            50724: {\r\n                'name': 'CameraCalibration2',\r\n                'type': 'SRational'\r\n            },\r\n            50725: {\r\n                'name': 'ReductionMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50726: {\r\n                'name': 'ReductionMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50727: {\r\n                'name': 'AnalogBalance',\r\n                'type': 'Rational'\r\n            },\r\n            50728: {\r\n                'name': 'AsShotNeutral',\r\n                'type': 'Short'\r\n            },\r\n            50729: {\r\n                'name': 'AsShotWhiteXY',\r\n                'type': 'Rational'\r\n            },\r\n            50730: {\r\n                'name': 'BaselineExposure',\r\n                'type': 'SRational'\r\n            },\r\n            50731: {\r\n                'name': 'BaselineNoise',\r\n                'type': 'Rational'\r\n            },\r\n            50732: {\r\n                'name': 'BaselineSharpness',\r\n                'type': 'Rational'\r\n            },\r\n            50733: {\r\n                'name': 'BayerGreenSplit',\r\n                'type': 'Long'\r\n            },\r\n            50734: {\r\n                'name': 'LinearResponseLimit',\r\n                'type': 'Rational'\r\n            },\r\n            50735: {\r\n                'name': 'CameraSerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            50736: {\r\n                'name': 'LensInfo',\r\n                'type': 'Rational'\r\n            },\r\n            50737: {\r\n                'name': 'ChromaBlurRadius',\r\n                'type': 'Rational'\r\n            },\r\n            50738: {\r\n                'name': 'AntiAliasStrength',\r\n                'type': 'Rational'\r\n            },\r\n            50739: {\r\n                'name': 'ShadowScale',\r\n                'type': 'SRational'\r\n            },\r\n            50740: {\r\n                'name': 'DNGPrivateData',\r\n                'type': 'Byte'\r\n            },\r\n            50741: {\r\n                'name': 'MakerNoteSafety',\r\n                'type': 'Short'\r\n            },\r\n            50778: {\r\n                'name': 'CalibrationIlluminant1',\r\n                'type': 'Short'\r\n            },\r\n            50779: {\r\n                'name': 'CalibrationIlluminant2',\r\n                'type': 'Short'\r\n            },\r\n            50780: {\r\n                'name': 'BestQualityScale',\r\n                'type': 'Rational'\r\n            },\r\n            50781: {\r\n                'name': 'RawDataUniqueID',\r\n                'type': 'Byte'\r\n            },\r\n            50827: {\r\n                'name': 'OriginalRawFileName',\r\n                'type': 'Byte'\r\n            },\r\n            50828: {\r\n                'name': 'OriginalRawFileData',\r\n                'type': 'Undefined'\r\n            },\r\n            50829: {\r\n                'name': 'ActiveArea',\r\n                'type': 'Short'\r\n            },\r\n            50830: {\r\n                'name': 'MaskedAreas',\r\n                'type': 'Short'\r\n            },\r\n            50831: {\r\n                'name': 'AsShotICCProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            50832: {\r\n                'name': 'AsShotPreProfileMatrix',\r\n                'type': 'SRational'\r\n            },\r\n            50833: {\r\n                'name': 'CurrentICCProfile',\r\n                'type': 'Undefined'\r\n            },\r\n            50834: {\r\n                'name': 'CurrentPreProfileMatrix',\r\n                'type': 'SRational'\r\n            },\r\n            50879: {\r\n                'name': 'ColorimetricReference',\r\n                'type': 'Short'\r\n            },\r\n            50931: {\r\n                'name': 'CameraCalibrationSignature',\r\n                'type': 'Byte'\r\n            },\r\n            50932: {\r\n                'name': 'ProfileCalibrationSignature',\r\n                'type': 'Byte'\r\n            },\r\n            50934: {\r\n                'name': 'AsShotProfileName',\r\n                'type': 'Byte'\r\n            },\r\n            50935: {\r\n                'name': 'NoiseReductionApplied',\r\n                'type': 'Rational'\r\n            },\r\n            50936: {\r\n                'name': 'ProfileName',\r\n                'type': 'Byte'\r\n            },\r\n            50937: {\r\n                'name': 'ProfileHueSatMapDims',\r\n                'type': 'Long'\r\n            },\r\n            50938: {\r\n                'name': 'ProfileHueSatMapData1',\r\n                'type': 'Float'\r\n            },\r\n            50939: {\r\n                'name': 'ProfileHueSatMapData2',\r\n                'type': 'Float'\r\n            },\r\n            50940: {\r\n                'name': 'ProfileToneCurve',\r\n                'type': 'Float'\r\n            },\r\n            50941: {\r\n                'name': 'ProfileEmbedPolicy',\r\n                'type': 'Long'\r\n            },\r\n            50942: {\r\n                'name': 'ProfileCopyright',\r\n                'type': 'Byte'\r\n            },\r\n            50964: {\r\n                'name': 'ForwardMatrix1',\r\n                'type': 'SRational'\r\n            },\r\n            50965: {\r\n                'name': 'ForwardMatrix2',\r\n                'type': 'SRational'\r\n            },\r\n            50966: {\r\n                'name': 'PreviewApplicationName',\r\n                'type': 'Byte'\r\n            },\r\n            50967: {\r\n                'name': 'PreviewApplicationVersion',\r\n                'type': 'Byte'\r\n            },\r\n            50968: {\r\n                'name': 'PreviewSettingsName',\r\n                'type': 'Byte'\r\n            },\r\n            50969: {\r\n                'name': 'PreviewSettingsDigest',\r\n                'type': 'Byte'\r\n            },\r\n            50970: {\r\n                'name': 'PreviewColorSpace',\r\n                'type': 'Long'\r\n            },\r\n            50971: {\r\n                'name': 'PreviewDateTime',\r\n                'type': 'Ascii'\r\n            },\r\n            50972: {\r\n                'name': 'RawImageDigest',\r\n                'type': 'Undefined'\r\n            },\r\n            50973: {\r\n                'name': 'OriginalRawFileDigest',\r\n                'type': 'Undefined'\r\n            },\r\n            50974: {\r\n                'name': 'SubTileBlockSize',\r\n                'type': 'Long'\r\n            },\r\n            50975: {\r\n                'name': 'RowInterleaveFactor',\r\n                'type': 'Long'\r\n            },\r\n            50981: {\r\n                'name': 'ProfileLookTableDims',\r\n                'type': 'Long'\r\n            },\r\n            50982: {\r\n                'name': 'ProfileLookTableData',\r\n                'type': 'Float'\r\n            },\r\n            51008: {\r\n                'name': 'OpcodeList1',\r\n                'type': 'Undefined'\r\n            },\r\n            51009: {\r\n                'name': 'OpcodeList2',\r\n                'type': 'Undefined'\r\n            },\r\n            51022: {\r\n                'name': 'OpcodeList3',\r\n                'type': 'Undefined'\r\n            }\r\n        },\r\n        'Exif': {\r\n            33434: {\r\n                'name': 'ExposureTime',\r\n                'type': 'Rational'\r\n            },\r\n            33437: {\r\n                'name': 'FNumber',\r\n                'type': 'Rational'\r\n            },\r\n            34850: {\r\n                'name': 'ExposureProgram',\r\n                'type': 'Short'\r\n            },\r\n            34852: {\r\n                'name': 'SpectralSensitivity',\r\n                'type': 'Ascii'\r\n            },\r\n            34855: {\r\n                'name': 'ISOSpeedRatings',\r\n                'type': 'Short'\r\n            },\r\n            34856: {\r\n                'name': 'OECF',\r\n                'type': 'Undefined'\r\n            },\r\n            34864: {\r\n                'name': 'SensitivityType',\r\n                'type': 'Short'\r\n            },\r\n            34865: {\r\n                'name': 'StandardOutputSensitivity',\r\n                'type': 'Long'\r\n            },\r\n            34866: {\r\n                'name': 'RecommendedExposureIndex',\r\n                'type': 'Long'\r\n            },\r\n            34867: {\r\n                'name': 'ISOSpeed',\r\n                'type': 'Long'\r\n            },\r\n            34868: {\r\n                'name': 'ISOSpeedLatitudeyyy',\r\n                'type': 'Long'\r\n            },\r\n            34869: {\r\n                'name': 'ISOSpeedLatitudezzz',\r\n                'type': 'Long'\r\n            },\r\n            36864: {\r\n                'name': 'ExifVersion',\r\n                'type': 'Undefined'\r\n            },\r\n            36867: {\r\n                'name': 'DateTimeOriginal',\r\n                'type': 'Ascii'\r\n            },\r\n            36868: {\r\n                'name': 'DateTimeDigitized',\r\n                'type': 'Ascii'\r\n            },\r\n            37121: {\r\n                'name': 'ComponentsConfiguration',\r\n                'type': 'Undefined'\r\n            },\r\n            37122: {\r\n                'name': 'CompressedBitsPerPixel',\r\n                'type': 'Rational'\r\n            },\r\n            37377: {\r\n                'name': 'ShutterSpeedValue',\r\n                'type': 'SRational'\r\n            },\r\n            37378: {\r\n                'name': 'ApertureValue',\r\n                'type': 'Rational'\r\n            },\r\n            37379: {\r\n                'name': 'BrightnessValue',\r\n                'type': 'SRational'\r\n            },\r\n            37380: {\r\n                'name': 'ExposureBiasValue',\r\n                'type': 'SRational'\r\n            },\r\n            37381: {\r\n                'name': 'MaxApertureValue',\r\n                'type': 'Rational'\r\n            },\r\n            37382: {\r\n                'name': 'SubjectDistance',\r\n                'type': 'Rational'\r\n            },\r\n            37383: {\r\n                'name': 'MeteringMode',\r\n                'type': 'Short'\r\n            },\r\n            37384: {\r\n                'name': 'LightSource',\r\n                'type': 'Short'\r\n            },\r\n            37385: {\r\n                'name': 'Flash',\r\n                'type': 'Short'\r\n            },\r\n            37386: {\r\n                'name': 'FocalLength',\r\n                'type': 'Rational'\r\n            },\r\n            37396: {\r\n                'name': 'SubjectArea',\r\n                'type': 'Short'\r\n            },\r\n            37500: {\r\n                'name': 'MakerNote',\r\n                'type': 'Undefined'\r\n            },\r\n            37510: {\r\n                'name': 'UserComment',\r\n                'type': 'Ascii'\r\n            },\r\n            37520: {\r\n                'name': 'SubSecTime',\r\n                'type': 'Ascii'\r\n            },\r\n            37521: {\r\n                'name': 'SubSecTimeOriginal',\r\n                'type': 'Ascii'\r\n            },\r\n            37522: {\r\n                'name': 'SubSecTimeDigitized',\r\n                'type': 'Ascii'\r\n            },\r\n            40960: {\r\n                'name': 'FlashpixVersion',\r\n                'type': 'Undefined'\r\n            },\r\n            40961: {\r\n                'name': 'ColorSpace',\r\n                'type': 'Short'\r\n            },\r\n            40962: {\r\n                'name': 'PixelXDimension',\r\n                'type': 'Long'\r\n            },\r\n            40963: {\r\n                'name': 'PixelYDimension',\r\n                'type': 'Long'\r\n            },\r\n            40964: {\r\n                'name': 'RelatedSoundFile',\r\n                'type': 'Ascii'\r\n            },\r\n            40965: {\r\n                'name': 'InteroperabilityTag',\r\n                'type': 'Long'\r\n            },\r\n            41483: {\r\n                'name': 'FlashEnergy',\r\n                'type': 'Rational'\r\n            },\r\n            41484: {\r\n                'name': 'SpatialFrequencyResponse',\r\n                'type': 'Undefined'\r\n            },\r\n            41486: {\r\n                'name': 'FocalPlaneXResolution',\r\n                'type': 'Rational'\r\n            },\r\n            41487: {\r\n                'name': 'FocalPlaneYResolution',\r\n                'type': 'Rational'\r\n            },\r\n            41488: {\r\n                'name': 'FocalPlaneResolutionUnit',\r\n                'type': 'Short'\r\n            },\r\n            41492: {\r\n                'name': 'SubjectLocation',\r\n                'type': 'Short'\r\n            },\r\n            41493: {\r\n                'name': 'ExposureIndex',\r\n                'type': 'Rational'\r\n            },\r\n            41495: {\r\n                'name': 'SensingMethod',\r\n                'type': 'Short'\r\n            },\r\n            41728: {\r\n                'name': 'FileSource',\r\n                'type': 'Undefined'\r\n            },\r\n            41729: {\r\n                'name': 'SceneType',\r\n                'type': 'Undefined'\r\n            },\r\n            41730: {\r\n                'name': 'CFAPattern',\r\n                'type': 'Undefined'\r\n            },\r\n            41985: {\r\n                'name': 'CustomRendered',\r\n                'type': 'Short'\r\n            },\r\n            41986: {\r\n                'name': 'ExposureMode',\r\n                'type': 'Short'\r\n            },\r\n            41987: {\r\n                'name': 'WhiteBalance',\r\n                'type': 'Short'\r\n            },\r\n            41988: {\r\n                'name': 'DigitalZoomRatio',\r\n                'type': 'Rational'\r\n            },\r\n            41989: {\r\n                'name': 'FocalLengthIn35mmFilm',\r\n                'type': 'Short'\r\n            },\r\n            41990: {\r\n                'name': 'SceneCaptureType',\r\n                'type': 'Short'\r\n            },\r\n            41991: {\r\n                'name': 'GainControl',\r\n                'type': 'Short'\r\n            },\r\n            41992: {\r\n                'name': 'Contrast',\r\n                'type': 'Short'\r\n            },\r\n            41993: {\r\n                'name': 'Saturation',\r\n                'type': 'Short'\r\n            },\r\n            41994: {\r\n                'name': 'Sharpness',\r\n                'type': 'Short'\r\n            },\r\n            41995: {\r\n                'name': 'DeviceSettingDescription',\r\n                'type': 'Undefined'\r\n            },\r\n            41996: {\r\n                'name': 'SubjectDistanceRange',\r\n                'type': 'Short'\r\n            },\r\n            42016: {\r\n                'name': 'ImageUniqueID',\r\n                'type': 'Ascii'\r\n            },\r\n            42032: {\r\n                'name': 'CameraOwnerName',\r\n                'type': 'Ascii'\r\n            },\r\n            42033: {\r\n                'name': 'BodySerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            42034: {\r\n                'name': 'LensSpecification',\r\n                'type': 'Rational'\r\n            },\r\n            42035: {\r\n                'name': 'LensMake',\r\n                'type': 'Ascii'\r\n            },\r\n            42036: {\r\n                'name': 'LensModel',\r\n                'type': 'Ascii'\r\n            },\r\n            42037: {\r\n                'name': 'LensSerialNumber',\r\n                'type': 'Ascii'\r\n            },\r\n            42240: {\r\n                'name': 'Gamma',\r\n                'type': 'Rational'\r\n            }\r\n        },\r\n        'GPS': {\r\n            0: {\r\n                'name': 'GPSVersionID',\r\n                'type': 'Byte'\r\n            },\r\n            1: {\r\n                'name': 'GPSLatitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            2: {\r\n                'name': 'GPSLatitude',\r\n                'type': 'Rational'\r\n            },\r\n            3: {\r\n                'name': 'GPSLongitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            4: {\r\n                'name': 'GPSLongitude',\r\n                'type': 'Rational'\r\n            },\r\n            5: {\r\n                'name': 'GPSAltitudeRef',\r\n                'type': 'Byte'\r\n            },\r\n            6: {\r\n                'name': 'GPSAltitude',\r\n                'type': 'Rational'\r\n            },\r\n            7: {\r\n                'name': 'GPSTimeStamp',\r\n                'type': 'Rational'\r\n            },\r\n            8: {\r\n                'name': 'GPSSatellites',\r\n                'type': 'Ascii'\r\n            },\r\n            9: {\r\n                'name': 'GPSStatus',\r\n                'type': 'Ascii'\r\n            },\r\n            10: {\r\n                'name': 'GPSMeasureMode',\r\n                'type': 'Ascii'\r\n            },\r\n            11: {\r\n                'name': 'GPSDOP',\r\n                'type': 'Rational'\r\n            },\r\n            12: {\r\n                'name': 'GPSSpeedRef',\r\n                'type': 'Ascii'\r\n            },\r\n            13: {\r\n                'name': 'GPSSpeed',\r\n                'type': 'Rational'\r\n            },\r\n            14: {\r\n                'name': 'GPSTrackRef',\r\n                'type': 'Ascii'\r\n            },\r\n            15: {\r\n                'name': 'GPSTrack',\r\n                'type': 'Rational'\r\n            },\r\n            16: {\r\n                'name': 'GPSImgDirectionRef',\r\n                'type': 'Ascii'\r\n            },\r\n            17: {\r\n                'name': 'GPSImgDirection',\r\n                'type': 'Rational'\r\n            },\r\n            18: {\r\n                'name': 'GPSMapDatum',\r\n                'type': 'Ascii'\r\n            },\r\n            19: {\r\n                'name': 'GPSDestLatitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            20: {\r\n                'name': 'GPSDestLatitude',\r\n                'type': 'Rational'\r\n            },\r\n            21: {\r\n                'name': 'GPSDestLongitudeRef',\r\n                'type': 'Ascii'\r\n            },\r\n            22: {\r\n                'name': 'GPSDestLongitude',\r\n                'type': 'Rational'\r\n            },\r\n            23: {\r\n                'name': 'GPSDestBearingRef',\r\n                'type': 'Ascii'\r\n            },\r\n            24: {\r\n                'name': 'GPSDestBearing',\r\n                'type': 'Rational'\r\n            },\r\n            25: {\r\n                'name': 'GPSDestDistanceRef',\r\n                'type': 'Ascii'\r\n            },\r\n            26: {\r\n                'name': 'GPSDestDistance',\r\n                'type': 'Rational'\r\n            },\r\n            27: {\r\n                'name': 'GPSProcessingMethod',\r\n                'type': 'Undefined'\r\n            },\r\n            28: {\r\n                'name': 'GPSAreaInformation',\r\n                'type': 'Undefined'\r\n            },\r\n            29: {\r\n                'name': 'GPSDateStamp',\r\n                'type': 'Ascii'\r\n            },\r\n            30: {\r\n                'name': 'GPSDifferential',\r\n                'type': 'Short'\r\n            },\r\n            31: {\r\n                'name': 'GPSHPositioningError',\r\n                'type': 'Rational'\r\n            }\r\n        },\r\n        'Interop': {\r\n            1: {\r\n                'name': 'InteroperabilityIndex',\r\n                'type': 'Ascii'\r\n            }\r\n        },\r\n    };\r\n    TAGS[\"0th\"] = TAGS[\"Image\"];\r\n    TAGS[\"1st\"] = TAGS[\"Image\"];\r\n    that.TAGS = TAGS;\r\n\r\n    \r\n    that.ImageIFD = {\r\n        ProcessingSoftware:11,\r\n        NewSubfileType:254,\r\n        SubfileType:255,\r\n        ImageWidth:256,\r\n        ImageLength:257,\r\n        BitsPerSample:258,\r\n        Compression:259,\r\n        PhotometricInterpretation:262,\r\n        Threshholding:263,\r\n        CellWidth:264,\r\n        CellLength:265,\r\n        FillOrder:266,\r\n        DocumentName:269,\r\n        ImageDescription:270,\r\n        Make:271,\r\n        Model:272,\r\n        StripOffsets:273,\r\n        Orientation:274,\r\n        SamplesPerPixel:277,\r\n        RowsPerStrip:278,\r\n        StripByteCounts:279,\r\n        XResolution:282,\r\n        YResolution:283,\r\n        PlanarConfiguration:284,\r\n        GrayResponseUnit:290,\r\n        GrayResponseCurve:291,\r\n        T4Options:292,\r\n        T6Options:293,\r\n        ResolutionUnit:296,\r\n        TransferFunction:301,\r\n        Software:305,\r\n        DateTime:306,\r\n        Artist:315,\r\n        HostComputer:316,\r\n        Predictor:317,\r\n        WhitePoint:318,\r\n        PrimaryChromaticities:319,\r\n        ColorMap:320,\r\n        HalftoneHints:321,\r\n        TileWidth:322,\r\n        TileLength:323,\r\n        TileOffsets:324,\r\n        TileByteCounts:325,\r\n        SubIFDs:330,\r\n        InkSet:332,\r\n        InkNames:333,\r\n        NumberOfInks:334,\r\n        DotRange:336,\r\n        TargetPrinter:337,\r\n        ExtraSamples:338,\r\n        SampleFormat:339,\r\n        SMinSampleValue:340,\r\n        SMaxSampleValue:341,\r\n        TransferRange:342,\r\n        ClipPath:343,\r\n        XClipPathUnits:344,\r\n        YClipPathUnits:345,\r\n        Indexed:346,\r\n        JPEGTables:347,\r\n        OPIProxy:351,\r\n        JPEGProc:512,\r\n        JPEGInterchangeFormat:513,\r\n        JPEGInterchangeFormatLength:514,\r\n        JPEGRestartInterval:515,\r\n        JPEGLosslessPredictors:517,\r\n        JPEGPointTransforms:518,\r\n        JPEGQTables:519,\r\n        JPEGDCTables:520,\r\n        JPEGACTables:521,\r\n        YCbCrCoefficients:529,\r\n        YCbCrSubSampling:530,\r\n        YCbCrPositioning:531,\r\n        ReferenceBlackWhite:532,\r\n        XMLPacket:700,\r\n        Rating:18246,\r\n        RatingPercent:18249,\r\n        ImageID:32781,\r\n        CFARepeatPatternDim:33421,\r\n        CFAPattern:33422,\r\n        BatteryLevel:33423,\r\n        Copyright:33432,\r\n        ExposureTime:33434,\r\n        ImageResources:34377,\r\n        ExifTag:34665,\r\n        InterColorProfile:34675,\r\n        GPSTag:34853,\r\n        Interlace:34857,\r\n        TimeZoneOffset:34858,\r\n        SelfTimerMode:34859,\r\n        FlashEnergy:37387,\r\n        SpatialFrequencyResponse:37388,\r\n        Noise:37389,\r\n        FocalPlaneXResolution:37390,\r\n        FocalPlaneYResolution:37391,\r\n        FocalPlaneResolutionUnit:37392,\r\n        ImageNumber:37393,\r\n        SecurityClassification:37394,\r\n        ImageHistory:37395,\r\n        ExposureIndex:37397,\r\n        TIFFEPStandardID:37398,\r\n        SensingMethod:37399,\r\n        XPTitle:40091,\r\n        XPComment:40092,\r\n        XPAuthor:40093,\r\n        XPKeywords:40094,\r\n        XPSubject:40095,\r\n        PrintImageMatching:50341,\r\n        DNGVersion:50706,\r\n        DNGBackwardVersion:50707,\r\n        UniqueCameraModel:50708,\r\n        LocalizedCameraModel:50709,\r\n        CFAPlaneColor:50710,\r\n        CFALayout:50711,\r\n        LinearizationTable:50712,\r\n        BlackLevelRepeatDim:50713,\r\n        BlackLevel:50714,\r\n        BlackLevelDeltaH:50715,\r\n        BlackLevelDeltaV:50716,\r\n        WhiteLevel:50717,\r\n        DefaultScale:50718,\r\n        DefaultCropOrigin:50719,\r\n        DefaultCropSize:50720,\r\n        ColorMatrix1:50721,\r\n        ColorMatrix2:50722,\r\n        CameraCalibration1:50723,\r\n        CameraCalibration2:50724,\r\n        ReductionMatrix1:50725,\r\n        ReductionMatrix2:50726,\r\n        AnalogBalance:50727,\r\n        AsShotNeutral:50728,\r\n        AsShotWhiteXY:50729,\r\n        BaselineExposure:50730,\r\n        BaselineNoise:50731,\r\n        BaselineSharpness:50732,\r\n        BayerGreenSplit:50733,\r\n        LinearResponseLimit:50734,\r\n        CameraSerialNumber:50735,\r\n        LensInfo:50736,\r\n        ChromaBlurRadius:50737,\r\n        AntiAliasStrength:50738,\r\n        ShadowScale:50739,\r\n        DNGPrivateData:50740,\r\n        MakerNoteSafety:50741,\r\n        CalibrationIlluminant1:50778,\r\n        CalibrationIlluminant2:50779,\r\n        BestQualityScale:50780,\r\n        RawDataUniqueID:50781,\r\n        OriginalRawFileName:50827,\r\n        OriginalRawFileData:50828,\r\n        ActiveArea:50829,\r\n        MaskedAreas:50830,\r\n        AsShotICCProfile:50831,\r\n        AsShotPreProfileMatrix:50832,\r\n        CurrentICCProfile:50833,\r\n        CurrentPreProfileMatrix:50834,\r\n        ColorimetricReference:50879,\r\n        CameraCalibrationSignature:50931,\r\n        ProfileCalibrationSignature:50932,\r\n        AsShotProfileName:50934,\r\n        NoiseReductionApplied:50935,\r\n        ProfileName:50936,\r\n        ProfileHueSatMapDims:50937,\r\n        ProfileHueSatMapData1:50938,\r\n        ProfileHueSatMapData2:50939,\r\n        ProfileToneCurve:50940,\r\n        ProfileEmbedPolicy:50941,\r\n        ProfileCopyright:50942,\r\n        ForwardMatrix1:50964,\r\n        ForwardMatrix2:50965,\r\n        PreviewApplicationName:50966,\r\n        PreviewApplicationVersion:50967,\r\n        PreviewSettingsName:50968,\r\n        PreviewSettingsDigest:50969,\r\n        PreviewColorSpace:50970,\r\n        PreviewDateTime:50971,\r\n        RawImageDigest:50972,\r\n        OriginalRawFileDigest:50973,\r\n        SubTileBlockSize:50974,\r\n        RowInterleaveFactor:50975,\r\n        ProfileLookTableDims:50981,\r\n        ProfileLookTableData:50982,\r\n        OpcodeList1:51008,\r\n        OpcodeList2:51009,\r\n        OpcodeList3:51022,\r\n        NoiseProfile:51041,\r\n    };\r\n\r\n    \r\n    that.ExifIFD = {\r\n        ExposureTime:33434,\r\n        FNumber:33437,\r\n        ExposureProgram:34850,\r\n        SpectralSensitivity:34852,\r\n        ISOSpeedRatings:34855,\r\n        OECF:34856,\r\n        SensitivityType:34864,\r\n        StandardOutputSensitivity:34865,\r\n        RecommendedExposureIndex:34866,\r\n        ISOSpeed:34867,\r\n        ISOSpeedLatitudeyyy:34868,\r\n        ISOSpeedLatitudezzz:34869,\r\n        ExifVersion:36864,\r\n        DateTimeOriginal:36867,\r\n        DateTimeDigitized:36868,\r\n        ComponentsConfiguration:37121,\r\n        CompressedBitsPerPixel:37122,\r\n        ShutterSpeedValue:37377,\r\n        ApertureValue:37378,\r\n        BrightnessValue:37379,\r\n        ExposureBiasValue:37380,\r\n        MaxApertureValue:37381,\r\n        SubjectDistance:37382,\r\n        MeteringMode:37383,\r\n        LightSource:37384,\r\n        Flash:37385,\r\n        FocalLength:37386,\r\n        SubjectArea:37396,\r\n        MakerNote:37500,\r\n        UserComment:37510,\r\n        SubSecTime:37520,\r\n        SubSecTimeOriginal:37521,\r\n        SubSecTimeDigitized:37522,\r\n        FlashpixVersion:40960,\r\n        ColorSpace:40961,\r\n        PixelXDimension:40962,\r\n        PixelYDimension:40963,\r\n        RelatedSoundFile:40964,\r\n        InteroperabilityTag:40965,\r\n        FlashEnergy:41483,\r\n        SpatialFrequencyResponse:41484,\r\n        FocalPlaneXResolution:41486,\r\n        FocalPlaneYResolution:41487,\r\n        FocalPlaneResolutionUnit:41488,\r\n        SubjectLocation:41492,\r\n        ExposureIndex:41493,\r\n        SensingMethod:41495,\r\n        FileSource:41728,\r\n        SceneType:41729,\r\n        CFAPattern:41730,\r\n        CustomRendered:41985,\r\n        ExposureMode:41986,\r\n        WhiteBalance:41987,\r\n        DigitalZoomRatio:41988,\r\n        FocalLengthIn35mmFilm:41989,\r\n        SceneCaptureType:41990,\r\n        GainControl:41991,\r\n        Contrast:41992,\r\n        Saturation:41993,\r\n        Sharpness:41994,\r\n        DeviceSettingDescription:41995,\r\n        SubjectDistanceRange:41996,\r\n        ImageUniqueID:42016,\r\n        CameraOwnerName:42032,\r\n        BodySerialNumber:42033,\r\n        LensSpecification:42034,\r\n        LensMake:42035,\r\n        LensModel:42036,\r\n        LensSerialNumber:42037,\r\n        Gamma:42240,\r\n    };\r\n\r\n\r\n    that.GPSIFD = {\r\n        GPSVersionID:0,\r\n        GPSLatitudeRef:1,\r\n        GPSLatitude:2,\r\n        GPSLongitudeRef:3,\r\n        GPSLongitude:4,\r\n        GPSAltitudeRef:5,\r\n        GPSAltitude:6,\r\n        GPSTimeStamp:7,\r\n        GPSSatellites:8,\r\n        GPSStatus:9,\r\n        GPSMeasureMode:10,\r\n        GPSDOP:11,\r\n        GPSSpeedRef:12,\r\n        GPSSpeed:13,\r\n        GPSTrackRef:14,\r\n        GPSTrack:15,\r\n        GPSImgDirectionRef:16,\r\n        GPSImgDirection:17,\r\n        GPSMapDatum:18,\r\n        GPSDestLatitudeRef:19,\r\n        GPSDestLatitude:20,\r\n        GPSDestLongitudeRef:21,\r\n        GPSDestLongitude:22,\r\n        GPSDestBearingRef:23,\r\n        GPSDestBearing:24,\r\n        GPSDestDistanceRef:25,\r\n        GPSDestDistance:26,\r\n        GPSProcessingMethod:27,\r\n        GPSAreaInformation:28,\r\n        GPSDateStamp:29,\r\n        GPSDifferential:30,\r\n        GPSHPositioningError:31,\r\n    };\r\n\r\n\r\n    that.InteropIFD = {\r\n        InteroperabilityIndex:1,\r\n    };\r\n\r\n    that.GPSHelper = {\r\n        degToDmsRational:function (degFloat) {\r\n            var degAbs = Math.abs(degFloat);\r\n            var minFloat = degAbs % 1 * 60;\r\n            var secFloat = minFloat % 1 * 60;\r\n            var deg = Math.floor(degAbs);\r\n            var min = Math.floor(minFloat);\r\n            var sec = Math.round(secFloat * 100);\r\n\r\n            return [[deg, 1], [min, 1], [sec, 100]];\r\n        },\r\n\r\n        dmsRationalToDeg:function (dmsArray, ref) {\r\n            var sign = (ref === 'S' || ref === 'W') ? -1.0 : 1.0;\r\n            var deg = dmsArray[0][0] / dmsArray[0][1] +\r\n                      dmsArray[1][0] / dmsArray[1][1] / 60.0 +\r\n                      dmsArray[2][0] / dmsArray[2][1] / 3600.0;\r\n\r\n            return deg * sign;\r\n        }\r\n    };\r\n    \r\n    \r\n    if (typeof exports !== 'undefined') {\r\n        if (typeof module !== 'undefined' && module.exports) {\r\n            exports = module.exports = that;\r\n        }\r\n        exports.piexif = that;\r\n    } else {\r\n        window.piexif = that;\r\n    }\r\n\r\n})();\r\n"],
  "mappings": "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",
  "names": []
}
